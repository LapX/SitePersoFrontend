{"version":3,"sources":["utils/Api.ts","utils/Authentication.ts","components/home/Home.tsx","components/navbar/Navbar.tsx","components/dashboard/EarningsGraph.tsx","components/drawer/ClippedDrawer.tsx","components/dashboard/Dashboard.tsx","components/lightingcontrol/LightingControl.tsx","components/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["ApiUrl","getGraphsData","token","a","axios","get","then","response","data","catch","error","alert","console","log","getUser","addGraphs","amount","dir","post","headers","getToken","cookie","Cookies","undefined","Home","props","state","email","picture","document","documentElement","classList","toggle","cookies","search","window","location","URLSearchParams","set","setToken","this","getUserInfo","setState","Email","Picture","id","className","Component","backend","style","makeStyles","theme","createStyles","navbarEnd","marginLeft","color","background","homeAppBar","boxShadow","zIndex","drawer","appBar","button","Navbar","classes","useState","hash","setHash","userPicture","setUserPicture","React","anchorEl","setAnchorEl","useEffect","addEventListener","onHashChange","getUserPicture","userInfo","handleClose","nav","href","ThemeProvider","AppBar","position","Toolbar","matchMedia","matches","IconButton","ghPagesRouting","Typography","Avatar","src","icon","faGithub","faLinkedin","onClick","event","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","container","width","backgroundColor","margin","containerMobile","borderRadius","typography","fontSize","marginBottom","axisStyle","grid","stroke","ticks","opacity","tickLabels","fill","font","EarningsGraph","EarningsGraphData","length","domainPadding","VictoryTheme","material","tickValues","dependentAxis","tickFormat","x","colorScale","map","key","ID","Tuples","y","drawerOpen","flexShrink","drawerClosed","spacing","drawerPaperOpen","drawerPaperClosed","expansionPanel","avatar","marginRight","toolbar","mixins","ClippedDrawer","updateCallback","isDrawerOpened","setDrawerOpen","isGraphsOpen","setGraphsOpen","adjustNumberOfGraphs","number","toggleDrawer","Drawer","variant","paper","ExpansionPanel","expanded","ExpansionPanelSummary","ListItem","faChartBar","ListItemText","primary","ExpansionPanelDetails","ButtonGroup","size","aria-label","Button","display","flexWrap","paddingLeft","Dashboard","EarningsGraphArray","graphsData","setGraphsData","fetchAndSetGraphsData","fetchedData","videoContainer","marginTop","height","video","LightingControl","frameBorder","allow","allowFullScreen","title","createMuiTheme","palette","main","secondary","fontFamily","App","exact","path","component","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1968c27d.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst ApiUrl: String = 'https://lapx.herokuapp.com'\r\n\r\nexport async function getData() {\r\n    return await axios.get(ApiUrl + '/data')\r\n        .then(response => {\r\n            return response.data\r\n        }).catch(error => {\r\n            alert(\"Api is down.\")\r\n            console.log(error)\r\n        })\r\n}\r\n\r\nexport async function getGraphsData(token: string) {\r\n    return await axios.get(ApiUrl + '/dataGraphs?token=' + token)\r\n        .then(response => {\r\n            return response.data\r\n        }).catch(error => {\r\n            alert(\"Api is down.\")\r\n            console.log(error)\r\n        })\r\n}\r\n\r\nexport async function getUser(token: string) {\r\n    return await axios.get(ApiUrl + '/auth?token=' + token).then(response => {\r\n        return response.data\r\n    }).catch(error => {\r\n        alert(\"Api is down.\")\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nexport async function addGraphs(token: string, amount: number) {\r\n    console.dir(token)\r\n    console.dir(amount)\r\n    return await axios.post(ApiUrl + '/addGraphs',\r\n        {\r\n            token: token,\r\n            amount: amount\r\n        }, {\r\n            headers: {\r\n                'Content-Type': 'text/plain'\r\n            }\r\n        }).catch(error => {\r\n        alert(\"Api is down.\")\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n","import Cookies from \"universal-cookie/lib\";\r\n\r\nexport function setToken() {\r\n    const cookies = new Cookies();\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    let token = params.get('token');\r\n    if (token === null) {\r\n        const cookie = cookies.get('token');\r\n        if (cookie != null) {\r\n            token = cookie;\r\n        }\r\n    }\r\n    if (token !== null) {\r\n        cookies.set('token', token);\r\n    }\r\n}\r\n\r\nexport function getToken(): string {\r\n    const defaultToken = \"0\";\r\n    const cookies = new Cookies();\r\n    let cookie = cookies.get('token');\r\n    if (cookie == undefined) {\r\n        cookie = defaultToken;\r\n    }\r\n    return cookie;\r\n}","import React, {Component} from 'react';\r\nimport './Home.css';\r\nimport {getUser} from \"../../utils/Api\";\r\nimport {getToken, setToken} from \"../../utils/Authentication\";\r\n\r\ninterface IState {\r\n    email: string,\r\n    picture: string\r\n}\r\n\r\ninterface IProps {\r\n}\r\n\r\nexport class Home extends Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props)\r\n        this.state = {\r\n            email: \"\",\r\n            picture: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.documentElement.classList.toggle('animatedBackground');\r\n        setToken();\r\n        this.getUserInfo();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.documentElement.classList.toggle('animatedBackground');\r\n    }\r\n\r\n    getUserInfo() {\r\n        const token = getToken();\r\n        getUser(token).then(response => this.setState({\r\n            email: response.Email,\r\n            picture: response.Picture\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const {email} = this.state;\r\n        return (\r\n            <div id='welcomeText'\r\n                 className='tile is-ancestor has-text-centered is-vertical'>\r\n                <div className='tile is-parent '>\r\n                    <article className='tile is-child'>\r\n                        <p id='welcomeTitle' className='title'>LapX Personal Website</p>\r\n                        <div className='content is-medium'>\r\n                            Here you will find personal projects I worked on in my free time.\r\n                        </div>\r\n                        <div className='content is-small'>\r\n                            Click the Github icon to see the code.\r\n                        </div>\r\n                        <div className={email == \"\" ? 'is-hidden' : 'content'}>\r\n                            Welcome {email}\r\n                        </div>\r\n                    </article>\r\n                </div>\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {AppBar, Theme, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport createStyles from \"@material-ui/styles/createStyles\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faGithub, faLinkedin} from \"@fortawesome/free-brands-svg-icons\"\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {getToken} from \"../../utils/Authentication\";\r\nimport {getUser} from \"../../utils/Api\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst ghPagesRouting = '/SitePersoFrontend/#';\r\nconst backend = 'https://lapx.herokuapp.com/';\r\n\r\ninterface IProps {\r\n    theme: Theme\r\n}\r\n\r\nconst style = makeStyles((theme) =>\r\n    createStyles({\r\n        navbarEnd: {\r\n            marginLeft: 'auto',\r\n            \"&:hover\": {\r\n                color: '#add5ff',\r\n                background: 'none',\r\n            }\r\n        },\r\n        homeAppBar: {\r\n            background: 'transparent',\r\n            boxShadow: 'none',\r\n            zIndex: theme.zIndex.drawer + 1,\r\n        },\r\n        appBar: {\r\n            background: '#004587',\r\n            boxShadow: 'none',\r\n            zIndex: theme.zIndex.drawer + 1,\r\n        },\r\n        button: {\r\n            \"&:hover\": {\r\n                color: '#add5ff',\r\n                background: 'none'\r\n            }\r\n        },\r\n    }));\r\n\r\n\r\nconst Navbar = (props: IProps) => {\r\n    const classes = style();\r\n    const mobileWidth = 570;\r\n    const {theme} = props;\r\n    const [hash, setHash] = useState(window.location.hash);\r\n    const [userPicture, setUserPicture] = useState(\"\");\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"hashchange\", onHashChange);\r\n        getUserPicture();\r\n    }, []);\r\n\r\n    const onHashChange = () => {\r\n        setHash(window.location.hash)\r\n    }\r\n\r\n    const getUserPicture = async () => {\r\n        const token = getToken();\r\n        const userInfo = await getUser(token);\r\n        setUserPicture(userInfo.Picture)\r\n    }\r\n\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (nav: string) => {\r\n        setAnchorEl(null);\r\n        if (nav !== \"\") {\r\n            window.location.href = ghPagesRouting + nav;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <AppBar\r\n                position=\"sticky\"\r\n                className={hash == \"#/\" ? classes.homeAppBar : classes.appBar}>\r\n                <Toolbar\r\n                    className={window.matchMedia(\"(max-width: \" + mobileWidth + \"px)\").matches ? \"is-hidden\" : \"\"}>\r\n                    <IconButton color='primary' href={ghPagesRouting + '/'} className={classes.button}>\r\n                        <Typography>\r\n                            Home\r\n                        </Typography>\r\n                    </IconButton>\r\n                    <IconButton color='primary' href={ghPagesRouting + '/Dashboard'} className={classes.button}>\r\n                        <Typography>\r\n                            Dashboard\r\n                        </Typography>\r\n                    </IconButton>\r\n                    <IconButton color='primary' href={ghPagesRouting + '/LightingControl'}\r\n                                className={classes.button}>\r\n                        <Typography>\r\n                            Lighting control\r\n                        </Typography>\r\n                    </IconButton>\r\n                    <IconButton color='primary' href={backend + '/auth/google/login'}\r\n                                className={userPicture == \"\" ? classes.navbarEnd : \"is-hidden\"}>\r\n                        <Typography>\r\n                            Login\r\n                        </Typography>\r\n                    </IconButton>\r\n                    <IconButton color='primary' href={backend + '/auth/google/login'}\r\n                                className={userPicture == \"\" ? \"is-hidden\" : classes.navbarEnd}>\r\n                        <Avatar src={userPicture}/>\r\n                    </IconButton>\r\n                    <IconButton color='primary'\r\n                                className={classes.button}\r\n                                href=\"https://github.com/LapX\">\r\n                        <FontAwesomeIcon icon={faGithub}/>\r\n                    </IconButton>\r\n                    <IconButton color='primary'\r\n                                className={classes.button}\r\n                                href=\"https://www.linkedin.com/in/tommy-montreuil-30714ba8/\">\r\n                        <FontAwesomeIcon icon={faLinkedin}/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n                <Toolbar className={window.matchMedia(\"(max-width: \" + mobileWidth + \"px)\").matches ? \"\" : \"is-hidden\"}>\r\n                    <IconButton color='primary' onClick={handleClick}>\r\n                        <MenuIcon></MenuIcon>\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={() => {\r\n                            handleClose(\"\")\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n                            handleClose(\"/\")\r\n                        }}>Home</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            handleClose(\"/Dashboard\")\r\n                        }}>Dashboard</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            handleClose(\"LightingControl\")\r\n                        }}>Lighting control</MenuItem>\r\n                    </Menu>\r\n                    <IconButton color='primary' href={backend + '/auth/google/login'}\r\n                                className={userPicture == \"\" ? classes.navbarEnd : \"is-hidden\"}>\r\n                        <Typography>\r\n                            Login\r\n                        </Typography>\r\n                    </IconButton>\r\n                    <IconButton color='primary' href={backend + '/auth/google/login'}\r\n                                className={userPicture == \"\" ? \"is-hidden\" : classes.navbarEnd}>\r\n                        <Avatar src={userPicture}/>\r\n                    </IconButton>\r\n                    <IconButton color='primary'\r\n                                className={classes.button}\r\n                                href=\"https://github.com/LapX\">\r\n                        <FontAwesomeIcon icon={faGithub}/>\r\n                    </IconButton>\r\n                    <IconButton color='primary'\r\n                                className={classes.button}\r\n                                href=\"https://www.linkedin.com/in/tommy-montreuil-30714ba8/\">\r\n                        <FontAwesomeIcon icon={faLinkedin}/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </ThemeProvider>\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {VictoryAxis, VictoryBar, VictoryChart, VictoryStack, VictoryTheme} from 'victory';\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport createStyles from \"@material-ui/styles/createStyles/createStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface IProps {\r\n    theme: Theme\r\n    EarningsGraphData: Array<EarningsGraphData>\r\n}\r\n\r\ninterface EarningsGraphData {\r\n    ID: number\r\n    Tuples: Array<Tuples>\r\n}\r\n\r\ninterface Tuples {\r\n    Quarter: number\r\n    Earnings: number\r\n}\r\n\r\n\r\nconst style = makeStyles(() =>\r\n    createStyles({\r\n        container: {\r\n            width: 440,\r\n            backgroundColor: '#242424',\r\n            margin: 10\r\n        },\r\n        containerMobile: {\r\n            width: 'auto',\r\n            backgroundColor: '#242424',\r\n            margin: 10,\r\n            borderRadius: 10,\r\n        },\r\n        typography: {\r\n            color: 'white',\r\n            fontSize: 20,\r\n            margin: 20,\r\n            marginBottom: -50,\r\n            marginLeft: 'auto',\r\n            width: '70%',\r\n        }\r\n    }))\r\n;\r\n\r\nconst axisStyle = {\r\n    grid: {stroke: 'grey'},\r\n    ticks: {opacity: 0},\r\n    tickLabels: {fill: 'white', font: 'arial'},\r\n}\r\n\r\nconst EarningsGraph = (props: IProps) => {\r\n    const classes = style();\r\n    const {theme, EarningsGraphData} = props;\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div\r\n                className={window.matchMedia(\"(max-width: 570px)\").matches ? classes.containerMobile : classes.container}>\r\n                <Typography className={classes.typography}>Earnings in the\r\n                    last {EarningsGraphData.length} years</Typography>\r\n                <VictoryChart domainPadding={30} theme={VictoryTheme.material}>\r\n                    <VictoryAxis tickValues={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]} style={axisStyle}/>\r\n                    <VictoryAxis dependentAxis tickFormat={(x) => (`$${x / 1000}k`)} style={axisStyle}/>\r\n                    <VictoryStack colorScale={\"cool\"}>\r\n                        {EarningsGraphData.map(data => (<VictoryBar\r\n                            key={data.ID}\r\n                            data={data.Tuples}\r\n                            x={\"Quarter\"}\r\n                            y={\"Earnings\"}\r\n                        />))}\r\n                    </VictoryStack>\r\n                </VictoryChart>\r\n            </div>\r\n        </ThemeProvider>\r\n\r\n    )\r\n        ;\r\n}\r\n\r\nexport default EarningsGraph;\r\n","import {Drawer, ListItem, ListItemText, Theme} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport createStyles from \"@material-ui/styles/createStyles/createStyles\";\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faChartBar} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport {addGraphs} from \"../../utils/Api\";\r\nimport {getToken} from \"../../utils/Authentication\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Menu} from \"@material-ui/icons\";\r\n\r\n\r\ninterface IProps {\r\n    theme: Theme\r\n    updateCallback: Function\r\n}\r\n\r\nconst drawerWidth = 170;\r\n\r\nconst style = makeStyles((theme) =>\r\n    createStyles({\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n        drawerClosed: {\r\n            width: theme.spacing(7) + 1,\r\n            flexShrink: 0\r\n        },\r\n        drawerPaperOpen: {\r\n            width: drawerWidth,\r\n            backgroundColor: '#242424',\r\n            color: '#ffffff'\r\n        },\r\n        drawerPaperClosed: {\r\n            width: theme.spacing(7) + 1,\r\n            backgroundColor: '#242424',\r\n            color: '#ffffff'\r\n        },\r\n        expansionPanel: {\r\n            backgroundColor: '#242424',\r\n            color: '#ffffff'\r\n        },\r\n        button: {\r\n            backgroundColor: '#202020',\r\n            color: '#ffffff',\r\n            fontSize: 25,\r\n            width: 60\r\n        },\r\n        avatar: {\r\n            backgroundColor: '#004587',\r\n            marginRight: 12,\r\n            marginLeft: 10\r\n        },\r\n        toolbar: theme.mixins.toolbar\r\n    }))\r\n;\r\n\r\nconst ClippedDrawer = (props: IProps) => {\r\n    const {theme, updateCallback} = props\r\n    const classes = style();\r\n    const [isDrawerOpened, setDrawerOpen] = useState(false);\r\n    const [isGraphsOpen, setGraphsOpen] = useState(false);\r\n\r\n    const adjustNumberOfGraphs = async (number: number) => {\r\n        await addGraphs(getToken(), number);\r\n        updateCallback();\r\n    }\r\n\r\n    const toggleDrawer = () => {\r\n        setDrawerOpen(!isDrawerOpened);\r\n        setGraphsOpen(!isGraphsOpen);\r\n    }\r\n\r\n    const toggleGraphs = () => {\r\n        setGraphsOpen(!isGraphsOpen);\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Drawer\r\n                theme={theme}\r\n                className={isDrawerOpened ? classes.drawerOpen : classes.drawerClosed} variant=\"permanent\" classes={{\r\n                paper: isDrawerOpened ? classes.drawerPaperOpen : classes.drawerPaperClosed,\r\n            }}>\r\n                <div className={classes.toolbar}/>\r\n                <IconButton\r\n                    onClick={toggleDrawer}\r\n                ><Menu color='primary'/>\r\n                </IconButton>\r\n                <ExpansionPanel className={classes.expansionPanel}\r\n                                expanded={isGraphsOpen && isDrawerOpened}>\r\n                    <ExpansionPanelSummary onClick={isDrawerOpened ? toggleGraphs : toggleDrawer}>\r\n                        <ListItem button key={'Graphs'}>\r\n                            <Avatar className={classes.avatar}>\r\n                                <FontAwesomeIcon icon={faChartBar}/>\r\n                            </Avatar>\r\n                            <ListItemText primary={'Graphs'} className={isDrawerOpened ? \"\" : \"is-hidden\"}/>\r\n                        </ListItem>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n                            <Button onClick={() => {\r\n                                adjustNumberOfGraphs(-1)\r\n                            }} className={classes.button}>-</Button>\r\n                            <Button onClick={() => {\r\n                                adjustNumberOfGraphs(1)\r\n                            }} className={classes.button}>+</Button>\r\n                        </ButtonGroup>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n            </Drawer>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default ClippedDrawer;","import React, {useEffect, useState} from 'react';\r\nimport {Theme} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport createStyles from \"@material-ui/styles/createStyles/createStyles\";\r\nimport {getGraphsData} from \"../../utils/Api\";\r\nimport {getToken} from \"../../utils/Authentication\";\r\nimport EarningsGraph from \"./EarningsGraph\";\r\nimport ClippedDrawer from \"../drawer/ClippedDrawer\";\r\n\r\ninterface IProps {\r\n    theme: Theme\r\n}\r\n\r\nconst style = makeStyles(() =>\r\n    createStyles({\r\n        container: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            paddingLeft: 65\r\n        }\r\n    }))\r\n;\r\n\r\nconst Dashboard = (props: IProps) => {\r\n    const classes = style();\r\n    const {theme} = props\r\n    const [graphsData, setGraphsData] = useState({\r\n        EarningsGraphArray: [{\r\n            EarningsGraphData: []\r\n        }]\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchAndSetGraphsData()\r\n    }, []);\r\n\r\n    const fetchAndSetGraphsData = async () => {\r\n        const token = getToken();\r\n        const fetchedData = await getGraphsData(token);\r\n        if (fetchedData.EarningsGraphArray != null) {\r\n            setGraphsData(fetchedData)\r\n        } else {\r\n            setGraphsData({EarningsGraphArray: []})\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ClippedDrawer theme={theme} updateCallback={fetchAndSetGraphsData}/>\r\n            <div className={classes.container}>\r\n                {graphsData.EarningsGraphArray.map(data => (\r\n                    <EarningsGraph theme={theme} EarningsGraphData={data.EarningsGraphData}/>))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import {Theme} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport createStyles from \"@material-ui/styles/createStyles/createStyles\";\r\n\r\ninterface IProps {\r\n    theme: Theme\r\n}\r\n\r\nconst style = makeStyles(() =>\r\n    createStyles({\r\n        videoContainer: {\r\n            marginLeft: '10vw',\r\n            marginTop: '2vh',\r\n            width: '80vw',\r\n            height: '88vh'\r\n        },\r\n        video: {\r\n            margin: 'auto',\r\n            width: '100%',\r\n            height: '100%'\r\n        }\r\n    }))\r\n;\r\n\r\nconst LightingControl = (props: IProps) => {\r\n    const classes = style();\r\n    const {theme} = props\r\n\r\n    return (<div className={classes.videoContainer}>\r\n        <iframe className={classes.video}\r\n                src='https://www.youtube.com/embed/EEEC12kXwYc'\r\n                frameBorder='0'\r\n                allow='autoplay; encrypted-media'\r\n                allowFullScreen\r\n                title='video'\r\n        />\r\n    </div>);\r\n}\r\n\r\nexport default LightingControl;","import React from 'react';\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport Home from \"../home/Home\";\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport Dashboard from \"../dashboard/Dashboard\"\r\nimport LightingControl from \"../lightingcontrol/LightingControl\"\r\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {main: '#FFFFFF'},\r\n        secondary: {main: '#0078ff'},\r\n    },\r\n    typography: {\r\n        fontFamily: 'arial',\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar theme={theme}/>\r\n            <HashRouter>\r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/Dashboard' component={() => <Dashboard theme={theme}/>}/>\r\n                <Route exact path='/LightingControl' component={() => <LightingControl theme={theme}/>}/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}